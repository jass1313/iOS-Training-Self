//
//  LoginInteractor.swift
//  CleanSwiftDemo
//
//  Created by KiwiTech on 28/01/19.
//  Copyright (c) 2019 KiwiTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  func checkData(request: Login.Something.Request)
    func login(request: Login.Something.Request)
    
}

protocol LoginDataStore
{
  var name: String? { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    
    
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  var name: String?
  
  // MARK: Do something
    func login(request: Login.Something.Request) {
        do {
            try worker?.loginKaro(request: request, completion: { (response) in
                self.presenter?.presentSomething(response: response)
            })
        }
        catch let error {
            switch error {
            case ValidationErrors.blankField:
                //presenter?.
                break
            default:
                break
            }
        }
    }
    
  func checkData(request: Login.Something.Request)
  {
    if let name = name {
        presenter?.presentSomething(response: Login.Something.Response(name: name))
    }
//    worker = LoginWorker()
//    worker?.doSomeWork(comepletion: {
//
//    })
//
//    let response = Login.Something.Response()
//    presenter?.presentSomething(response: response)
  }
}
